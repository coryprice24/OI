swagger: '2.0'
info:
  version: v0
  title: nationwide-bai
  description: Backend-for-Frontend API for Banking App
  contact:
    name: Dan Taylor
    email: dan.taylor@nationwide.co.uk
paths:
  /api/Accounts:
    get:
      tags:
        - Accounts
      summary: Get data to populate the account list.
      operationId: ApiAccountsGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: Nationwide-StipEnabled
          in: header
          description: 'May affect return of Warning, Balance, TransactionsAvailable etc.'
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: 'The user''s accounts, with balance and basic status details.'
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountSummary'
  '/api/Accounts/{account}/Balance':
    get:
      tags:
        - Accounts
      summary: Fetch a balance for an account from its ASPSP.
      operationId: ApiAccountsByAccountBalanceGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: account
          in: path
          description: The ID of the account.
          required: true
          type: string
      responses:
        '200':
          description: The balance and the time it was recorded.
          schema:
            $ref: '#/definitions/AccountBalance'
        '400':
          description: >-
            The account is in a state such that the BA should not have asked for
            a live balance.
        '500':
          description: Call failed; the account list will show the last available balance.
  /api/Connect/Providers:
    get:
      tags:
        - Connect
      summary: >-
        Get data to populate the choose account provider page, and possibly the
        tour page.
      operationId: ApiConnectProvidersGet
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: >-
            A list of provider IDs for which accounts can currently be
            connected, ordered alphabetically by title.
          schema:
            type: array
            items:
              type: string
  /api/Connect/Begin:
    post:
      tags:
        - Connect
      summary: Create a request to connect accounts for a specified provider.
      operationId: ApiConnectBeginPost
      consumes: []
      produces:
        - text/plain
      parameters:
        - name: providerId
          in: body
          description: The ID of the provider to connect with.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The URL to navigate to to continue the request.
          schema:
            type: string
        '400':
          description: >-
            Possible unique error to distinguish between "provider has been
            disabled" and generic technical error.
  /api/Connect/Complete:
    post:
      tags:
        - Connect
      summary: Complete a request to connect accounts.
      operationId: ApiConnectCompletePost
      consumes: []
      produces:
        - application/json
      parameters:
        - name: handbackUrl
          in: body
          description: >-
            The URL handed back from the provider. May have been rewritten to a
            custom scheme.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: >-
            If the handback was recognised and we tried to handle it, whether it
            was eventually successful or not.
          schema:
            $ref: '#/definitions/HandbackResult'
        '400':
          description: >-
            If the handback URL isn't recognised or handleable e.g. the state
            doesn't match.
  /api/Pay/From/Accounts:
    get:
      tags:
        - Pay
      summary: Get data to populate the choose account to pay from page.
      operationId: ApiPayFromAccountsGet
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: >-
            A list of connected accounts for which payments can currently be
            initiated.
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountSummary'
  /api/Pay/From/Providers:
    get:
      tags:
        - Pay
      summary: Get data to populate the choose provider to pay from page.
      operationId: ApiPayFromProvidersGet
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: >-
            A list of provider IDs for which payments can currently be
            initiated, ordered alphabetically by title.
          schema:
            type: array
            items:
              type: string
  /api/Pay/To/Accounts:
    get:
      tags:
        - Pay
      summary: Get data to populate the choose account to pay to page.
      operationId: ApiPayToAccountsGet
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: >-
            A list of connected accounts to which payments can currently be
            made.
          schema:
            type: array
            items:
              $ref: '#/definitions/PayToAccount'
  /api/Pay/Begin:
    post:
      tags:
        - Pay
      summary: >-
        Create a request to initiate a payment from a specified provider or
        account.
      operationId: ApiPayBeginPost
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: request
          in: body
          description: The ID of the provider to connect with.
          required: false
          schema:
            $ref: '#/definitions/PaymentInitiationRequest'
      responses:
        '200':
          description: The URL to navigate to to continue the request.
          schema:
            type: string
        '400':
          description: >-
            Possible unique error to distinguish between "provider/account has
            been disabled" and generic technical error.
  /api/Pay/Complete:
    post:
      tags:
        - Pay
      summary: Complete a request to initiate a payment.
      operationId: ApiPayCompletePost
      consumes: []
      produces:
        - application/json
      parameters:
        - name: handbackUrl
          in: body
          description: >-
            The URL handed back from the provider. May have been rewritten to a
            custom scheme.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Initiation successful, with details of the payment.'
          schema:
            $ref: '#/definitions/PaymentInitiationOutcome'
        '500':
          description: >-
            Possible unique error to distinguish between "could not initiate
            payment" screen and generic technical error.
          schema:
            type: string
  /api/Pay/Check:
    get:
      tags:
        - Pay
      summary: >-
        Get data to populate the payment status screen. May need breaking down
        by source account, or may not.
      operationId: ApiPayCheckGet
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: List of payment outcomes.
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentInitiationOutcome'
  /api/Status:
    get:
      tags:
        - Status
      summary: Get data to populate the status summary screen.
      operationId: ApiStatusGet
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: >-
            The overall state of the each provider's consent and counts of
            accounts with specific issues.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProviderStatusSummary'
  '/api/Status/{provider}':
    get:
      tags:
        - Status
      summary: Get data to populate a provider's status screen.
      operationId: ApiStatusByProviderGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: provider
          in: path
          description: The provider ID.
          required: true
          type: string
      responses:
        '200':
          description: >-
            The overall state of the provider's consent, and specific issues for
            each connected account.
          schema:
            $ref: '#/definitions/ProviderStatus'
    delete:
      tags:
        - Status
      summary: Delete the consent for a given provider.
      operationId: ApiStatusByProviderDelete
      consumes: []
      produces: []
      parameters:
        - name: provider
          in: path
          description: The provider ID.
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted.
  '/api/Status/{provider}/Accounts/{account}':
    delete:
      tags:
        - Status
      summary: 'Delete a particular account with a provider, if possible.'
      operationId: ApiStatusByProviderAccountsByAccountDelete
      consumes: []
      produces: []
      parameters:
        - name: provider
          in: path
          description: The provider ID.
          required: true
          type: string
        - name: account
          in: path
          description: The account ID.
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted.
  '/api/Accounts/{account}/Transactions/Summary':
    get:
      tags:
        - Transactions
      summary: Get data to populate the statement screen.
      operationId: ApiAccountsByAccountTransactionsSummaryGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: account
          in: path
          description: The ID of the account.
          required: true
          type: string
      responses:
        '200':
          description: Account details and the last month of booked transactions.
          schema:
            $ref: '#/definitions/AccountStatement'
        '400':
          description: >-
            The account is in a state such that the BA should not have asked for
            a statement.
  '/api/Accounts/{account}/Transactions/{from}/{to}':
    get:
      tags:
        - Transactions
      summary: Get data to update the statement page with a new date range.
      operationId: ApiAccountsByAccountTransactionsByFromByToGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: account
          in: path
          description: The ID of the account.
          required: true
          type: string
        - name: from
          in: path
          description: The start of the window.
          required: true
          type: string
          format: date-time
        - name: to
          in: path
          description: The end of the window.
          required: true
          type: string
          format: date-time
      responses:
        '200':
          description: The booked transactions in the window.
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
  '/api/Accounts/{account}/Transactions/Pending':
    get:
      tags:
        - Transactions
      summary: Get data to populate the pending transactions page.
      operationId: ApiAccountsByAccountTransactionsPendingGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: account
          in: path
          description: The account ID.
          required: true
          type: string
      responses:
        '200':
          description: The unbooked transactions for the account.
          schema:
            type: array
            items:
              $ref: '#/definitions/PendingTransaction'
definitions:
  AccountSummary:
    description: Details to show an account on the account list.
    type: object
    properties:
      Account:
        $ref: '#/definitions/AccountIdentity'
        description: Details of the account itself.
      Warning:
        description: "Warning to show under an account, if any, in order of precedence:\r\n- ConsentRevoked (if we know the consent was been revoked before it expired)\r\n- ConsentExpired (if the consent expiry date is in the past)\r\n- ProviderDisabled (if OBAC is not loading data from this provider, currently or ever again)\r\n- AccountDisabled (if OBAC is not loading data from this account, currently or ever again\r\n- NotLoaded (if OBAC has not yet completed the initial data load for the balance)\r\n- Stale (if BAI thinks the balance was not loaded recently enough)\r\n- TechError (if BAI or an SC failed to get the balance from the DB)\r\n- Expiring (if BAI thinks the consent expiry date is too soon)"
        enum:
          - ConsentRevoked
          - ConsentExpired
          - ProviderDisabled
          - AccountDisabled
          - NotLoaded
          - Stale
          - TechError
          - Expiring
        type: string
        x-nullable: true
      Balance:
        $ref: '#/definitions/AccountBalance'
        description: >-
          The latest balance, if we are happy showing it. Likely mapped based on
          the value in Warning.
      TransactionsAvailable:
        description: >-
          Whether we are happy showing transactions. Likely mapped based on the
          value in Warning.
        type: boolean
        x-nullable: false
      FetchLiveBalance:
        description: "Whether or not we should query for a more up-to-date balance.\r\nProbably based on the value in Warning, maybe also based on how recent the last balance is."
        type: boolean
        x-nullable: false
      LinkToConsentStatus:
        description: >-
          Whether to show a link to the consent status page. Likely mapped based
          on whether Warning has a value.
        type: boolean
        x-nullable: false
      DaysUntilExpiry:
        format: int32
        description: The number of days left before the consent expires.
        type: integer
        x-nullable: false
  AccountIdentity:
    description: 'Core account details for the account list, statement and status screens.'
    type: object
    properties:
      Id:
        description: Unique (at least to the customer) identifier for the account.
        type: string
      Name:
        description: The name of the account.
        type: string
      Provider:
        description: The ID of the third-party provider of the account.
        type: string
      Identifier:
        description: >-
          The account's SCAN, IBAN, masked PAN, or other user-recognisable
          identifier.
        type: string
      AccountType:
        $ref: '#/definitions/AccountType'
        description: The type of the account.
  AccountBalance:
    description: An account balance and the time it was fetched.
    type: object
    properties:
      Balance:
        $ref: '#/definitions/Amount'
        description: The balance of the account.
      AsOf:
        format: date-time
        description: "The time to show against the balance. This is probably the time the third party\r\nreports it as, rather than the fetched time, although we will used the fetched\r\ntime for other decisions."
        type: string
        x-nullable: false
  AccountType:
    enum:
      - Unknown
      - ChargeCard
      - CreditCard
      - CurrentAccount
      - EMoney
      - Loan
      - Mortgage
      - PrePaidCard
      - Savings
    type: string
    x-nullable: false
  Amount:
    type: object
    properties:
      AbsoluteAmount:
        description: "The string currency as reported by Open Banking. Believed to be always positive, with up to 13 digits before and 5 digits after\r\nan optional decimal point. Should not be null or empty - without an amount the currency and credit/debit are meaningless."
        type: string
      Currency:
        description: >-
          The three-letter ISO currency code. If missing we'll probably assume
          it's GBP.
        type: string
      CreditDebitIndicator:
        $ref: '#/definitions/CreditDebit'
        description: >-
          Credit or debit. Probably as per Open Banking but we might flip for
          loans or mortgages or certain banks we know give odd results.
  CreditDebit:
    enum:
      - Credit
      - Debit
    type: string
    x-nullable: false
  HandbackResult:
    description: The result of a handback request.
    type: object
    properties:
      ProviderId:
        description: The provider the handback was for.
        type: string
      Action:
        $ref: '#/definitions/HandbackAction'
        description: The action the handback was for.
      Success:
        description: "Whether the handback was successful or not.\r\nAnticipated that we show a failure screen if this comes back false, or\r\na technical error if we get an HTTP error code."
        type: boolean
        x-nullable: false
  HandbackAction:
    enum:
      - Unknown
      - Connect
    type: string
    x-nullable: false
  PayToAccount:
    description: Details of a linked account we can pay money to.
    type: object
    properties:
      Id:
        description: Unique (at least to the customer) identifier for the account.
        type: string
      Name:
        description: The name of the account.
        type: string
      Provider:
        description: The ID of the third-party provider of the account.
        type: string
      SortCode:
        description: 'The account''s sort code, which we presumably need to pay to it.'
        type: string
      AccountNumber:
        description: 'The account''s account number, which we presumably need to pay to it.'
        type: string
      AccountType:
        $ref: '#/definitions/AccountType'
        description: The type of the account.
      Balance:
        $ref: '#/definitions/AccountBalance'
        description: >-
          The latest balance, if we are happy showing it. Likely mapped based on
          the value in Warning.
  PaymentInitiationRequest:
    description: Details for initiating a payment.
    type: object
    properties:
      ProviderId:
        description: >-
          The ID of the provider to pay from, if selecting source account at the
          provider.
        type: string
      SourceAccountId:
        description: >-
          The ID of the account to pay from, if selecting source account in the
          app.
        type: string
      Amount:
        format: double
        description: The amount of the payment.
        type: number
        x-nullable: false
      DestinationSortCode:
        description: 'The sort code of the destination, if it has a SCAN.'
        type: string
      DestinationAccountNumber:
        description: 'The account number of the destination, if it has a SCAN.'
        type: string
      DestinationIban:
        description: >-
          The IBAN of the destination, if it has one and this is possible for
          payments.
        type: string
  PaymentInitiationOutcome:
    description: "Details for result of a payment initiation request.\r\nShould have some kind of status, e.g. rejected, accepted, in progress, done etc."
    type: object
    properties:
      Id:
        description: ID of the request so we can check its status later.
        type: string
      Request:
        $ref: '#/definitions/PaymentInitiationRequest'
        description: 'Details of the initial request, so we can show source and amount.'
  ProviderStatusSummary:
    description: Status summary for a provider.
    type: object
    properties:
      Id:
        description: The ID of the provider.
        type: string
      Warning:
        description: "Warning to show under the consent, if any.\r\nIf initial data failed to load for every account (or for every account that is not blocked/revoked):\r\n - NoBalance (assumes priority over NoTransactions) \"We not been able to load balances yet for this provider\"\r\n - NoTransactions \"We've not been able to load transactions for this provider yet\"\r\nIf data has not been successfully loaded for every account for long enough that we want to warn the user,\r\nbut we don't have a good reason for why this is happening (or for every account that is not blocked/revoked):\r\n - StaleBalance \"We're having trouble loading balances for this provider\"\r\n - StaleTransactions \"We're having trouble loading transactions for this provider\"\r\n - Stale \"We're having trouble connecting to this provider\"\r\nIf Nationwide has decided not to load data for this provider:\r\n - Suspended \"We're having trouble with this provider\"\r\nIf the provider won't let us load data:\r\n - Revoked \"You've revoked access to this provider\"\r\n - Blocked \"This provider is not currently responding\"\r\n - RevokedAndBlocked \"All accounts are revoked or unresponsive?\"\r\nTime issues if everything else is OK:\r\n - Expired \"Access to this provider has expired\"\r\n - Expiring \"Access to this provider will expire soon\""
        enum:
          - NoBalance
          - NoTransactions
          - StaleBalance
          - StaleTransactions
          - Stale
          - Suspended
          - Revoked
          - Blocked
          - Expired
          - Expiring
        type: string
        x-nullable: true
      AccountCount:
        $ref: '#/definitions/ConsentAccountCount'
        description: 'Number of accounts on the consent, if we want to show it'
  ConsentAccountCount:
    description: Summary count of accounts.
    type: object
    properties:
      Accounts:
        format: int32
        description: Total number of accounts on the consent.
        type: integer
        x-nullable: false
      WarnedAccounts:
        format: int32
        description: Total number of accounts on the consent with warnings.
        type: integer
        x-nullable: false
  ProviderStatus:
    description: Status summary for a provider.
    type: object
    properties:
      Id:
        description: The ID of the provider.
        type: string
      Warning:
        description: "Warning states to show under the consent, if any.\r\nThis has fewer states than the summary page because individual accounts can have their own warnings.\r\nIf Nationwide has decided not to load data for this provider:\r\n - Suspended \"We're having trouble with this provider\"\r\nIf the provider won't let us load data, and all for the same reason:\r\n - Revoked \"You've revoked access to this provider\"\r\n - Blocked \"This provider is not currently responding\"\r\nTime issues if everything else is OK:\r\n - Expired \"Access to this provider has expired\"\r\n - Expiring \"Access to this provider will expire soon\""
        enum:
          - Suspended
          - Revoked
          - Blocked
          - RevokedAndBlocked
          - Expired
          - Expiring
        type: string
        x-nullable: true
      Authorised:
        format: date-time
        description: The time at which the connenction to the provider was last authorized.
        type: string
        x-nullable: false
      Expiry:
        $ref: '#/definitions/WarnableDate'
        description: >-
          The time at which the connenction to the provider expired or will
          expire.
      Accounts:
        description: Status of individual accounts.
        type: array
        items:
          $ref: '#/definitions/AccountStatus'
      CanDelete:
        description: Whether this consent can be deleted.
        type: boolean
        x-nullable: false
      CanRenew:
        description: Whether this consent can be renewed.
        type: boolean
        x-nullable: false
  WarnableDate:
    description: Class representing a row with a date and the potential for a warning flag.
    type: object
    properties:
      Value:
        format: date-time
        description: The value to display. Null for never.
        type: string
        x-nullable: true
      Warn:
        description: Whether to put a warning next to the value.
        type: boolean
        x-nullable: false
  AccountStatus:
    description: >-
      Details to show the status of an account on the status screen for a
      provider.
    type: object
    properties:
      Account:
        $ref: '#/definitions/AccountIdentity'
        description: Details of the account itself.
      Warning:
        description: "Warning states for an account on the consent status details screen.\r\nNote this does not have expired/expiring as that is purely consent-level.\r\nIf initial data load is not yet complete - we may just choose to put a warning against the date:\r\n - NoBalance (assumes priority over NoTransactionsYet) \"We've not yet loaded your balance\"\r\n - NoTransactions \"We've not yet loaded your transactions\"\r\nIf data has not been successfully loaded for long enough that we want to warn the user,\r\nbut we don't have a good reason for why this is happening - we may just choose to put a warning against the date:\r\n - StaleBalance \"We're having trouble loading your balance\"\r\n - StaleTransactions \"We're having trouble loading your transaction history\"\r\n - Stale \"We're having trouble connecting to this account\"\r\nIf Nationwide has decided not to load data for this account specifically, if that's possible:\r\n - Suspended \"We're having trouble with this account\"\r\nIf the provider won't let us load data for this account specifically:\r\n - Revoked \"You've revoked access to this account\"\r\n - Blocked \"This account is not currently available\""
        enum:
          - NoBalance
          - NoTransactions
          - StaleBalance
          - StaleTransactions
          - Stale
          - Suspended
          - Revoked
          - Blocked
        type: string
        x-nullable: true
      BalanceLastLoaded:
        $ref: '#/definitions/WarnableDate'
        description: >-
          The time at which balance was last loaded for the account, if we want
          to show it
      TransactionsLastLoaded:
        $ref: '#/definitions/WarnableDate'
        description: >-
          The time at which transactions were last loaded for the account, if we
          want to show it.
      CanDelete:
        description: Whether this account can be deleted.
        type: boolean
        x-nullable: false
  AccountStatement:
    description: Details to populate the statement screen for an account.
    type: object
    properties:
      Transactions:
        description: 'The last month''s worth of transactions, newest first.'
        type: array
        items:
          $ref: '#/definitions/Transaction'
      TransactionsLastLoaded:
        format: date-time
        description: "The time transactions were last fetched, so we can show this to the user?\r\nNull if load has not happened yet."
        type: string
        x-nullable: true
      TransactionsQueriedFrom:
        format: date-time
        description: "The first date from which transactions were queried, so we need not worry about agreeing on the definition of a \"month\".\r\nNull if we are not showing transactions (probably because they are stale or not yet loaded, otherwise we shouldn't be here)"
        type: string
        x-nullable: true
      TransactionsAvailableFrom:
        format: date-time
        description: "The first date from which transactions are theoretically available e.g. 13 months ago (from now or from start of consent, say).\r\nIf the account is not that old or the provider won't supply transactions that long ago, we can't help it."
        type: string
        x-nullable: false
      HasPendingTransactions:
        description: >-
          Whether we know there are unbooked transactions to show on the
          account.
        type: boolean
        x-nullable: false
  Transaction:
    description: Details of a cleared transaction.
    required:
      - Amount
    type: object
    properties:
      Time:
        format: date-time
        description: The timestamp of the transaction.
        type: string
        x-nullable: false
      Header:
        description: The main description string for the transaction.
        type: string
      OtherText:
        description: "Further lines of description for the transaction. Could be a single string with newlines.\r\nOr make Header the first line of this. Or both."
        type: array
        items:
          type: string
      Amount:
        $ref: '#/definitions/Amount'
        description: The amount of the transaction.
      Balance:
        $ref: '#/definitions/Amount'
        description: 'The balance after the transaction, if supplied.'
  PendingTransaction:
    description: Details of a pending transaction.
    required:
      - Amount
    type: object
    properties:
      Time:
        format: date-time
        description: The timestamp of the transaction.
        type: string
        x-nullable: false
      Header:
        description: >-
          The main description string for the transaction. (Potential for more
          lines of info elsewhere, in which case may as well use Transaction.)
        type: string
      Amount:
        $ref: '#/definitions/Amount'
        description: The amount of the transaction.
securityDefinitions:
  Bearer:
    name: Authorization
    in: header
    type: apiKey
    description: >-
      Token signed by BA and trusted by OBC. Required for every call; 401 if
      missing or invalid.
